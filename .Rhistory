?read.csv
data<-read.csv("ColombiaBirdMorphologyPhenology.csv", header = T)
View(data)
names(data)
#Species covered
unique(scientificName)
names(data)
#Species covered
unique(scientificName)
#Species covered
unique(scientificName)
#Species covered
unique("scientificName")
?unique
#Species covered
species<-unique(scientificName)
names(data)
#Species covered
species<-unique(data$scientificName)
species
names(data)
#Families covered
families<-unique(data$family)
families
count(species)
lenght(species)
?unique
length(species)
length(familiies)
#Families covered
families<-unique(data$family)
families
length(familiies)
length(families)
names(data)
min(data$decimalLatitude)
max(data$decimalLatitude)
min(data$decimalLongitude)
max(data$decimalLongitude)
library(maps)
library(mapdata)
library(maptools)
install.packages("mapdata")
library(mapdata)
map(database= "world", ylim=c(4.9, 5.7), xlim=c(-74.5, -76), col="grey80", fill=TRUE, projection="gilbert", orientation= c(90,0,225))
install.packages("mapproj")
map(database= "world", ylim=c(4.9, 5.7), xlim=c(-74.5, -76), col="grey80", fill=TRUE, projection="gilbert", orientation= c(90,0,225))
lon <- (data$decimalLongitude)
lat <- (data$decimalLatitude)
coord <- mapproject(lon, lat, proj="gilbert", orientation=c(90, 0, 225))  #convert points to projected lat/long
library(maps)
library(mapdata)
library(maptools)
coord <- mapproject(lon, lat, proj="gilbert", orientation=c(90, 0, 225))  #convert points to projected lat/long
library(mapproj)
coord <- mapproject(lon, lat, proj="gilbert", orientation=c(90, 0, 225))  #convert points to projected lat/long
points(coord, pch=20, cex=1.2, col="red")  #plot converted points
?map
library(RgoogleMaps)
center = c(mean(lat), mean(lon))  #tell what point to center on
zoom <- 2 #zoom: 1 = furthest out (entire globe), larger numbers = closer in
terrmap <- GetMap(center=center, zoom=zoom, maptype= "satallite", destfile = "satallite.png")
library(RgoogleMaps)
terrmap <- GetMap(center=center, zoom=zoom, maptype= "satallite", destfile = "satallite.png")
?terrampa
?terramap
?terrmap
#Trying another map option
df <- as.data.frame(cbind(lon,lat))
# getting the map
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
#Trying another map option
library(ggplot2)
library(ggmap)
# getting the map
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
?register_google
register_google(key = "[your key]")
# getting the map
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
register_google(key = "AIzaSyBHyT7WBqXrCGBHjMrAX6fdaGAVZVTKT-I")
df <- as.data.frame(cbind(lon,lat))
# getting the map
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
register_google(key = "AIzaSyBHyT7WBqXrCGBHjMrAX6fdaGAVZVTKT-I", write = TRUE)
has_google_key()
# getting the map
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
?get_map
library(devtools)
devtools::install_github("dkahle/ggmap")
library(ggmap)
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
)
register_google(key = "AIzaSyBHyT7WBqXrCGBHjMrAX6fdaGAVZVTKT-I", write = TRUE)
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
)
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", source = "google", scale = 2)
)
?ggmap
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", source = "google", scale = 2)
)
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", source = "google", scale = 2)
)
library(sp)
library(leaflet)
df <- as.data.frame(cbind(lon,lat))
lon <- (data$decimalLongitude)
lat <- (data$decimalLatitude)
data<-read.csv("ColombiaBirdMorphologyPhenology.csv", header = T)
attach(data)
names(data)
library(maps)
library(mapdata)
library(maptools)
library(mapproj)
map(database= "world", ylim=c(4.9, 5.7), xlim=c(-74.5, -76), col="grey80", fill=TRUE, projection="gilbert", orientation= c(90,0,225))
lon <- (data$decimalLongitude)
lat <- (data$decimalLatitude)
coord <- mapproject(lon, lat, proj="gilbert", orientation=c(90, 0, 225))  #convert points to projected lat/long
points(coord, pch=20, cex=1.2, col="red")  #plot converted points
library(sp)
library(leaflet)
df <- as.data.frame(cbind(lon,lat))
coordinates(df) <- ~lon+lat
leaflet(df) %>% addMarkers() %>% addTiles()
#With Google Maps....
library(RgoogleMaps)
center = c(mean(lat), mean(lon))  #tell what point to center on
zoom <- 2 #zoom: 1 = furthest out (entire globe), larger numbers = closer in
terrmap <- GetMap(center=center, zoom=zoom, type= "satellite", destfile = "satellite.png")
?GetMap
centre = c(mean(lat), mean(lon))  #tell what point to center on
terrmap <- GetMap(center=centre, zoom=zoom, type= "satellite", destfile = "satellite.png")
terrmap <- GetMap(center=centre, zoom=zoom, type= "Satellite", destfile = "satellite.png")
?GetMap
terrmap <- GetMap(center=centre, zoom=zoom, maptype= "satellite", destfile = "satellite.png")
terrmap <- GetMap(center=centre, zoom=zoom, destfile = "satellite.png")
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", source = "google", scale = 2)
)
library(ggmap)
#Trying another map option (doesn't work due to Google API)
library(ggplot2)
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", source = "google", scale = 2)
)
install.packages("mapdata")
data<-read.csv("ColombiaBirdMorphologyPhenology.csv", header = T)
View(data)
attach(data)
names(data)
#Species covered
species<-unique(data$scientificName)
species
length(species)
table(species)
table(scientificName)
#Genus covered
genera<-unique(data$genus)
genera
length(genera)
names(data)
length(species)
length(families)
#Families covered
families<-unique(data$family)
families
length(families)
min(data$decimalLatitude)
max(data$decimalLatitude)
min(data$decimalLongitude)
max(data$decimalLongitude)
library(maps)
library(mapdata)
library(maptools)
library(mapproj)
map(database= "world", ylim=c(4.9, 5.7), xlim=c(-74.5, -76), col="grey80", fill=TRUE, projection="gilbert", orientation= c(90,0,225))
lon <- (data$decimalLongitude)
lat <- (data$decimalLatitude)
coord <- mapproject(lon, lat, proj="gilbert", orientation=c(90, 0, 225))  #convert points to projected lat/long
points(coord, pch=20, cex=1.2, col="red")  #plot converted points
map(database= "world", ylim=c(4.9, 5.7), xlim=c(-74.5, -76), col="darkgoldenrod1", fill=TRUE, projection="gilbert", orientation= c(90,0,225))
lon <- (data$decimalLongitude)
lat <- (data$decimalLatitude)
coord <- mapproject(lon, lat, proj="gilbert", orientation=c(90, 0, 225))  #convert points to projected lat/long
points(coord, pch=20, cex=1.2, col="red")  #plot converted points
#Trying another map option (doesn't work due to Google API)
library(ggplot2)
library(ggmap)
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", source = "google", scale = 2)
)
df <- as.data.frame(cbind(lon,lat))
# getting the map
mapbirds <- ggmap(
get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", source = "google", scale = 2)
)
# plotting the map with some points on it
ggmap(mapbirds) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
library(sp)
library(leaflet)
df <- as.data.frame(cbind(lon,lat))
coordinates(df) <- ~lon+lat
leaflet(df) %>% addMarkers() %>% addTiles()
